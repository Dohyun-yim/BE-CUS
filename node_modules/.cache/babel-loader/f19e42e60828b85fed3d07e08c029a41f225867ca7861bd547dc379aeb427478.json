{"ast":null,"code":"var _jsxFileName = \"/Users/yimdohyun/Desktop/\\u1106\\u116E\\u11AB\\u1109\\u1165/\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/01_\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/00_frontcode/all/BE-CUS/all/src/pages/LoadingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [customerInfo, setCustomerInfo] = useState(null);\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n  const state = params.get(\"state\");\n  const handleLoginPost = async (code, state) => {\n    try {\n      const res = await axios.get(`http://34.64.53.159:8000/api/v1/user/naver/callback?code=${code}&state=${state}`);\n      console.log(res);\n      console.log(res.data.user);\n      setCustomerInfo(res.data.user); // 고객 정보를 상태로 저장\n      // localStorage에 고객 정보와 만료 시간을 저장\n      setItemWithExpireTime(\"customerInfo\", res.data.user, 2 * 60 * 60 * 1000); // 2시간 만료시간 설정\n      navigate(\"/connect\");\n      setTimeout(console.log(\"loading\"), 1000);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  function setItemWithExpireTime(keyName, keyValue, tts) {\n    // localStorage에 저장할 객체\n    const obj = {\n      value: keyValue,\n      expire: Date.now() + tts\n    };\n    // 객체를 JSON 문자열로 변환\n    const objString = JSON.stringify(obj);\n    // setItem\n    window.localStorage.setItem(keyName, objString);\n    // localStorage에 데이터가 들어갔는지 확인하는 console.log\n    console.log(`Data stored in localStorage under the key '${keyName}':`, keyValue);\n    console.log(`Expires at:`, new Date(obj.expire).toLocaleString()); // 만료 시간 확인용 로그\n  }\n  useEffect(() => {\n    if (code) {\n      handleLoginPost(code, state);\n    } else {\n      console.log(\"로그인 코드가 없습니다.\");\n    }\n  }, [code, state, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingPage, \"hGjP3I9XtuS2u1MmtZbsgL0rvpk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoadingPage;\nexport default LoadingPage;\nvar _c;\n$RefreshReg$(_c, \"LoadingPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoadingPage","_s","navigate","customerInfo","setCustomerInfo","params","URLSearchParams","window","location","search","code","get","state","handleLoginPost","res","console","log","data","user","setItemWithExpireTime","setTimeout","error","keyName","keyValue","tts","obj","value","expire","Date","now","objString","JSON","stringify","localStorage","setItem","toLocaleString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yimdohyun/Desktop/문서/대학교/01_졸업프로젝트/00_frontcode/all/BE-CUS/all/src/pages/LoadingPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoadingPage = () => {\n  const navigate = useNavigate();\n  const [customerInfo, setCustomerInfo] = useState(null);\n\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n  const state = params.get(\"state\");\n\n  const handleLoginPost = async (code, state) => {\n    try {\n      const res = await axios.get(\n        `http://34.64.53.159:8000/api/v1/user/naver/callback?code=${code}&state=${state}`\n      );\n      console.log(res);\n      console.log(res.data.user);\n      setCustomerInfo(res.data.user); // 고객 정보를 상태로 저장\n      // localStorage에 고객 정보와 만료 시간을 저장\n      setItemWithExpireTime(\"customerInfo\", res.data.user, 2 * 60 * 60 * 1000); // 2시간 만료시간 설정\n      navigate(\"/connect\");\n      setTimeout(console.log(\"loading\"), 1000);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function setItemWithExpireTime(keyName, keyValue, tts) {\n    // localStorage에 저장할 객체\n    const obj = {\n      value: keyValue,\n      expire: Date.now() + tts,\n    };\n    // 객체를 JSON 문자열로 변환\n    const objString = JSON.stringify(obj);\n    // setItem\n    window.localStorage.setItem(keyName, objString);\n    // localStorage에 데이터가 들어갔는지 확인하는 console.log\n    console.log(\n      `Data stored in localStorage under the key '${keyName}':`,\n      keyValue\n    );\n    console.log(`Expires at:`, new Date(obj.expire).toLocaleString()); // 만료 시간 확인용 로그\n  }\n\n  useEffect(() => {\n    if (code) {\n      handleLoginPost(code, state);\n    } else {\n      console.log(\"로그인 코드가 없습니다.\");\n    }\n  }, [code, state, navigate]);\n\n  return (\n    <div>\n      <h2>Loading...</h2>\n    </div>\n  );\n};\n\nexport default LoadingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}