{"ast":null,"code":"var _jsxFileName = \"/Users/yimdohyun/Desktop/\\u1106\\u116E\\u11AB\\u1109\\u1165/\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/01_\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/00_frontcode/all/BE-CUS/src/pages/LoadingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingPage = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // 현재 url에서 code 부분 추출\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n  const state = params.get(\"state\");\n  console.log(code);\n  console.log(state);\n  const handleLoginPost = async (code, state) => {\n    try {\n      const res = await axios.get(`http://34.64.53.159:8000/api/v1/user/naver/callback?code=${code}&state=${state}`);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (code, state) {\n      handleLoginPost(code, state);\n    } else {\n      console.log(\"로그인 재시도하세요.\");\n    }\n  }, [code, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"\\uB85C\\uADF8\\uC778\\uC911\\uC784\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(LoadingPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoadingPage;\nexport default LoadingPage;\nvar _c;\n$RefreshReg$(_c, \"LoadingPage\");","map":{"version":3,"names":["React","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","LoadingPage","_s","navigate","params","URLSearchParams","window","location","search","code","get","state","console","log","handleLoginPost","res","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yimdohyun/Desktop/문서/대학교/01_졸업프로젝트/00_frontcode/all/BE-CUS/src/pages/LoadingPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoadingPage = () => {\n  const navigate = useNavigate();\n\n  // 현재 url에서 code 부분 추출\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n  const state = params.get(\"state\");\n  console.log(code);\n  console.log(state);\n\n  const handleLoginPost = async (code, state) => {\n    try {\n      const res = await axios.get(\n        `http://34.64.53.159:8000/api/v1/user/naver/callback?code=${code}&state=${state}`\n      );\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if ((code, state)) {\n      handleLoginPost(code, state);\n    } else {\n      console.log(\"로그인 재시도하세요.\");\n    }\n  }, [code, navigate]);\n\n  return <h2>로그인중임</h2>;\n};\n\nexport default LoadingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMM,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC1D,MAAMC,IAAI,GAAGL,MAAM,CAACM,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,KAAK,GAAGP,MAAM,CAACM,GAAG,CAAC,OAAO,CAAC;EACjCE,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjBG,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,MAAMG,eAAe,GAAG,MAAAA,CAAOL,IAAI,EAAEE,KAAK,KAAK;IAC7C,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMlB,KAAK,CAACa,GAAG,CACxB,4DAA2DD,IAAK,UAASE,KAAM,EAClF,CAAC;MACDC,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,IAAKa,IAAI,EAAEE,KAAK,EAAG;MACjBG,eAAe,CAACL,IAAI,EAAEE,KAAK,CAAC;IAC9B,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B;EACF,CAAC,EAAE,CAACJ,IAAI,EAAEN,QAAQ,CAAC,CAAC;EAEpB,oBAAOH,OAAA;IAAAiB,QAAA,EAAI;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACvB,CAAC;AAACnB,EAAA,CA9BID,WAAW;EAAA,QACEH,WAAW;AAAA;AAAAwB,EAAA,GADxBrB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}