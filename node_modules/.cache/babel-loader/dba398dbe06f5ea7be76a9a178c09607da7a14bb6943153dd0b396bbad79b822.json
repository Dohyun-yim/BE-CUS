{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Final\\\\src\\\\pages\\\\man\\\\cus\\\\CusDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TitleSub from \"../../../components/man/TitleSub\"; // 상단 제목 컴포넌트 임포트\nimport InfoCus from \"../../../components/man/cus/InfoCus\"; // 고객 정보 컴포넌트 임포트\nimport TableCallList from \"../../../components/man/call/TableCallList\"; // 통화 목록 테이블 컴포넌트 임포트\nimport ManCusImg from \"../../../assets/man/cus_navy.png\"; // 이미지 파일 임포트\nimport mockDataCus from \"../../../mockdata/mockCus.json\"; // 가짜 고객 데이터 임포트\nimport mockCallData from \"../../../mockdata/a_mock_sample.json\"; // 가짜 통화 데이터 임포트\nimport styles from \"./CusDetailsPage.module.css\"; // CSS 모듈 스타일 임포트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CusDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 고객 ID 파라미터 추출\n  const [customerDetails, setCustomerDetails] = useState(null); // 고객 상세 정보 상태\n  const [matchingCalls, setMatchingCalls] = useState([]); // 일치하는 통화 내역 상태\n\n  useEffect(() => {\n    // 페이지가 렌더링될 때 실행되는 부수 효과 함수\n    const selectedCustomer = mockDataCus.find(customer => customer.id === parseInt(id)); // mockDataCus에서 해당 ID의 고객 찾기\n\n    setCustomerDetails(selectedCustomer); // 고객 정보 설정\n\n    const calls = mockCallData.filter(call => {\n      // mockCallData에서 해당 고객의 통화 내역 필터링\n      return call.name === selectedCustomer.phone; // 전화번호가 일치하는 경우에만 반환\n    });\n    setMatchingCalls(calls); // 일치하는 통화 내역 설정\n  }, [id]); // id가 변경될 때마다 실행\n\n  if (!customerDetails) {\n    // 고객 정보가 없는 경우\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.allcusone,\n      children: \"\\uC138\\uBD80 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // 세부 정보 없음 표시\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.allcusone,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.titlecusone,\n      children: /*#__PURE__*/_jsxDEV(TitleSub, {\n        imgSrc: ManCusImg,\n        title: \"\\uACE0\\uAC1D \\uC0C1\\uC138\\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.topcusone,\n      children: /*#__PURE__*/_jsxDEV(InfoCus, {\n        name: customerDetails.name,\n        customerId: customerDetails.id,\n        email: customerDetails.email,\n        phone: customerDetails.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.middlecusone,\n      children: [matchingCalls.length > 0 &&\n      /*#__PURE__*/\n      // 통화 내역이 있는 경우\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.middlecusoneTitle,\n          children: \"\\uD1B5\\uD654 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCallList, {\n          rowData: matchingCalls.map(call => ({\n            id: call.id,\n            date: call.date,\n            time: call.time,\n            cluster: call.cluster,\n            keyword: call.keyword\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), matchingCalls.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD1B5\\uD654 \\uB0B4\\uC5ED\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bottomcusone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CusDetailsPage, \"WeeuZAGbzy1mZExWXCM4k6KfEvg=\", false, function () {\n  return [useParams];\n});\n_c = CusDetailsPage;\nexport default CusDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"CusDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","TitleSub","InfoCus","TableCallList","ManCusImg","mockDataCus","mockCallData","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","CusDetailsPage","_s","id","customerDetails","setCustomerDetails","matchingCalls","setMatchingCalls","selectedCustomer","find","customer","parseInt","calls","filter","call","name","phone","className","allcusone","children","fileName","_jsxFileName","lineNumber","columnNumber","titlecusone","imgSrc","title","topcusone","customerId","email","middlecusone","length","middlecusoneTitle","rowData","map","date","time","cluster","keyword","bottomcusone","_c","$RefreshReg$"],"sources":["C:/Users/User/Final/src/pages/man/cus/CusDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TitleSub from \"../../../components/man/TitleSub\"; // 상단 제목 컴포넌트 임포트\r\nimport InfoCus from \"../../../components/man/cus/InfoCus\"; // 고객 정보 컴포넌트 임포트\r\nimport TableCallList from \"../../../components/man/call/TableCallList\"; // 통화 목록 테이블 컴포넌트 임포트\r\nimport ManCusImg from \"../../../assets/man/cus_navy.png\"; // 이미지 파일 임포트\r\nimport mockDataCus from \"../../../mockdata/mockCus.json\"; // 가짜 고객 데이터 임포트\r\nimport mockCallData from \"../../../mockdata/a_mock_sample.json\"; // 가짜 통화 데이터 임포트\r\nimport styles from \"./CusDetailsPage.module.css\"; // CSS 모듈 스타일 임포트\r\n\r\nconst CusDetailsPage = () => {\r\n  const { id } = useParams(); // URL에서 고객 ID 파라미터 추출\r\n  const [customerDetails, setCustomerDetails] = useState(null); // 고객 상세 정보 상태\r\n  const [matchingCalls, setMatchingCalls] = useState([]); // 일치하는 통화 내역 상태\r\n\r\n  useEffect(() => {\r\n    // 페이지가 렌더링될 때 실행되는 부수 효과 함수\r\n    const selectedCustomer = mockDataCus.find(\r\n      (customer) => customer.id === parseInt(id)\r\n    ); // mockDataCus에서 해당 ID의 고객 찾기\r\n\r\n    setCustomerDetails(selectedCustomer); // 고객 정보 설정\r\n\r\n    const calls = mockCallData.filter((call) => {\r\n      // mockCallData에서 해당 고객의 통화 내역 필터링\r\n      return call.name === selectedCustomer.phone; // 전화번호가 일치하는 경우에만 반환\r\n    });\r\n\r\n    setMatchingCalls(calls); // 일치하는 통화 내역 설정\r\n  }, [id]); // id가 변경될 때마다 실행\r\n\r\n  if (!customerDetails) {\r\n    // 고객 정보가 없는 경우\r\n    return <div className={styles.allcusone}>세부 정보가 없습니다..</div>; // 세부 정보 없음 표시\r\n  }\r\n\r\n  return (\r\n    <div className={styles.allcusone}>\r\n      <div className={styles.titlecusone}>\r\n        <TitleSub imgSrc={ManCusImg} title=\"고객 상세페이지\" />\r\n        {/* 상단 제목 컴포넌트 */}\r\n      </div>\r\n\r\n      <div className={styles.topcusone}>\r\n        <InfoCus\r\n          name={customerDetails.name}\r\n          customerId={customerDetails.id}\r\n          email={customerDetails.email}\r\n          phone={customerDetails.phone}\r\n        />\r\n        {/* 고객 정보 컴포넌트 */}\r\n      </div>\r\n\r\n      <div className={styles.middlecusone}>\r\n        {matchingCalls.length > 0 && ( // 통화 내역이 있는 경우\r\n          <>\r\n            <h2 className={styles.middlecusoneTitle}>통화 목록</h2>\r\n            {/* 통화 목록 제목 */}\r\n            <TableCallList\r\n              rowData={matchingCalls.map((call) => ({\r\n                id: call.id,\r\n                date: call.date,\r\n                time: call.time,\r\n                cluster: call.cluster,\r\n                keyword: call.keyword,\r\n              }))}\r\n            />\r\n            {/* 통화 목록 테이블 */}\r\n          </>\r\n        )}\r\n        {matchingCalls.length === 0 && <p>통화 내역이 없습니다!</p>}\r\n        {/* 통화 내역이 없는 경우 메시지 표시 */}\r\n      </div>\r\n\r\n      <div className={styles.bottomcusone}></div>\r\n      {/* 하단 영역 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CusDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}