{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\project\\\\BE-CUS\\\\src\\\\components\\\\man\\\\call\\\\TableCallList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./TableCallList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseDateAndTime(dateStr, timeStr) {\n  // 날짜 변환 (YYYY년 MM월 DD일 -> YYYY-MM-DD)\n  const dateParts = dateStr.split(\"년\")[0].trim() + \"-\" + dateStr.split(\"년\")[1].split(\"월\")[0].trim() + \"-\" + dateStr.split(\"년\")[1].split(\"월\")[1].split(\"일\")[0].trim();\n\n  // 시간 변환 (HH시 MM분 SS초 -> HH:MM:SS)\n  const timeParts = timeStr.split(\"시\")[0].trim() + \":\" + timeStr.split(\"시\")[1].split(\"분\")[0].trim() + \":\" + timeStr.split(\"시\")[1].split(\"분\")[1].split(\"초\")[0].trim();\n\n  // 날짜 + 시간 합쳐서 Date 생성\n  return new Date(`${dateParts} ${timeParts}`);\n}\nfunction TableCallList({\n  rowData\n}) {\n  _s();\n  const [sortedData, setSortedData] = useState([]);\n  useEffect(() => {\n    if (rowData) {\n      const sorted = [...rowData].sort((a, b) => {\n        const dateA = parseDateAndTime(a.date, a.time);\n        const dateB = parseDateAndTime(b.date, b.time);\n        return dateB - dateA; // 내림차순 (최신순)\n      });\n      setSortedData(sorted);\n    }\n  }, [rowData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sortedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.callTable,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC774\\uB984\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uB0A0\\uC9DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC2DC\\uAC04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uBD84\\uB958\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uB354\\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedData.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.cluster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/manager/calllist/call/${data.id}`,\n                className: styles.linkMore,\n                children: \"\\uB354\\uBCF4\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TableCallList, \"CdnnUx436zUdtdTFyAskKv4pW58=\");\n_c = TableCallList;\nexport default TableCallList;\nvar _c;\n$RefreshReg$(_c, \"TableCallList\");","map":{"version":3,"names":["React","useState","useEffect","Link","styles","jsxDEV","_jsxDEV","parseDateAndTime","dateStr","timeStr","dateParts","split","trim","timeParts","Date","TableCallList","rowData","_s","sortedData","setSortedData","sorted","sort","a","b","dateA","date","time","dateB","children","className","callTable","fileName","_jsxFileName","lineNumber","columnNumber","map","data","name","cluster","to","id","linkMore","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/project/BE-CUS/src/components/man/call/TableCallList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./TableCallList.module.css\";\r\n\r\nfunction parseDateAndTime(dateStr, timeStr) {\r\n  // 날짜 변환 (YYYY년 MM월 DD일 -> YYYY-MM-DD)\r\n  const dateParts =\r\n    dateStr.split(\"년\")[0].trim() +\r\n    \"-\" +\r\n    dateStr.split(\"년\")[1].split(\"월\")[0].trim() +\r\n    \"-\" +\r\n    dateStr.split(\"년\")[1].split(\"월\")[1].split(\"일\")[0].trim();\r\n\r\n  // 시간 변환 (HH시 MM분 SS초 -> HH:MM:SS)\r\n  const timeParts =\r\n    timeStr.split(\"시\")[0].trim() +\r\n    \":\" +\r\n    timeStr.split(\"시\")[1].split(\"분\")[0].trim() +\r\n    \":\" +\r\n    timeStr.split(\"시\")[1].split(\"분\")[1].split(\"초\")[0].trim();\r\n\r\n  // 날짜 + 시간 합쳐서 Date 생성\r\n  return new Date(`${dateParts} ${timeParts}`);\r\n}\r\n\r\nfunction TableCallList({ rowData }) {\r\n  const [sortedData, setSortedData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (rowData) {\r\n      const sorted = [...rowData].sort((a, b) => {\r\n        const dateA = parseDateAndTime(a.date, a.time);\r\n        const dateB = parseDateAndTime(b.date, b.time);\r\n        return dateB - dateA; // 내림차순 (최신순)\r\n      });\r\n      setSortedData(sorted);\r\n    }\r\n  }, [rowData]);\r\n\r\n  return (\r\n    <div>\r\n      {sortedData && (\r\n        <div>\r\n          <table className={styles.callTable}>\r\n            <thead>\r\n              <tr>\r\n                <th>이름</th>\r\n                <th>날짜</th>\r\n                <th>시간</th>\r\n                <th>분류</th>\r\n                <th>더보기</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortedData.map((data) => (\r\n                <tr key={data.id}>\r\n                  <td>{data.name}</td>\r\n                  <td>{data.date}</td>\r\n                  <td>{data.time}</td>\r\n                  <td>{data.cluster}</td>\r\n\r\n                  <td>\r\n                    <Link\r\n                      to={`/manager/calllist/call/${data.id}`}\r\n                      className={styles.linkMore}\r\n                    >\r\n                      더보기\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableCallList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}