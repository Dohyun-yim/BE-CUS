{"ast":null,"code":"var _jsxFileName = \"/Users/yimdohyun/Desktop/\\u1106\\u116E\\u11AB\\u1109\\u1165/\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/01_\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/\\u1100\\u116A\\u11AB\\u1105\\u1175\\u110C\\u1161 \\u1111\\u1166\\u110B\\u1175\\u110C\\u1175/manager/src/pages/man/ManCallonePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport mockData from \"./mock_sample.json\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManCallonePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [rowData, setRowData] = useState(null);\n\n  // 선택한 통화 데이터 추출 함수\n  const extractCallData = () => {\n    // JSON 데이터에서 선택한 통화 정보 추출\n    const selectedData = mockData[id];\n    setRowData(selectedData); // 추출된 데이터 설정\n  };\n\n  // 페이지 렌더링 시 선택한 통화 데이터 추출\n  useEffect(() => {\n    extractCallData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rowData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD1B5\\uD654 \\uC0C1\\uC138 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774\\uB984: \", rowData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0A0\\uC9DC: \", rowData.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC04: \", rowData.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBD84\\uB958: \", rowData.cluster]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD0A4\\uC6CC\\uB4DC: \", rowData.keyword.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC694\\uC57D: \", rowData.summarize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ManCallonePage, \"Mi3RP3iQw4UNiULnm9g+ex7VDck=\", false, function () {\n  return [useParams];\n});\n_c = ManCallonePage;\nexport default ManCallonePage;\nvar _c;\n$RefreshReg$(_c, \"ManCallonePage\");","map":{"version":3,"names":["React","useState","useEffect","mockData","useParams","jsxDEV","_jsxDEV","ManCallonePage","_s","id","rowData","setRowData","extractCallData","selectedData","children","fileName","_jsxFileName","lineNumber","columnNumber","name","date","time","cluster","keyword","join","summarize","_c","$RefreshReg$"],"sources":["/Users/yimdohyun/Desktop/문서/대학교/01_졸업프로젝트/관리자 페이지/manager/src/pages/man/ManCallonePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport mockData from \"./mock_sample.json\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ManCallonePage() {\n  const { id } = useParams();\n  const [rowData, setRowData] = useState(null);\n\n  // 선택한 통화 데이터 추출 함수\n  const extractCallData = () => {\n    // JSON 데이터에서 선택한 통화 정보 추출\n    const selectedData = mockData[id];\n\n    setRowData(selectedData); // 추출된 데이터 설정\n  };\n\n  // 페이지 렌더링 시 선택한 통화 데이터 추출\n  useEffect(() => {\n    extractCallData();\n  }, [id]);\n\n  return (\n    <div>\n      {/* 데이터가 존재하면 출력 */}\n      {rowData && (\n        <div>\n          <h2>통화 상세 정보</h2>\n          <p>이름: {rowData.name}</p>\n          <p>날짜: {rowData.date}</p>\n          <p>시간: {rowData.time}</p>\n          <p>분류: {rowData.cluster}</p>\n          <p>키워드: {rowData.keyword.join(\", \")}</p>\n          <p>요약: {rowData.summarize}</p> {/* 추가: 요약 정보 */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ManCallonePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA,MAAMC,YAAY,GAAGV,QAAQ,CAACM,EAAE,CAAC;IAEjCE,UAAU,CAACE,YAAY,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACdU,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAQ,QAAA,EAEGJ,OAAO,iBACNJ,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBZ,OAAA;QAAAQ,QAAA,GAAG,gBAAI,EAACJ,OAAO,CAACS,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBZ,OAAA;QAAAQ,QAAA,GAAG,gBAAI,EAACJ,OAAO,CAACU,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBZ,OAAA;QAAAQ,QAAA,GAAG,gBAAI,EAACJ,OAAO,CAACW,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBZ,OAAA;QAAAQ,QAAA,GAAG,gBAAI,EAACJ,OAAO,CAACY,OAAO;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BZ,OAAA;QAAAQ,QAAA,GAAG,sBAAK,EAACJ,OAAO,CAACa,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCZ,OAAA;QAAAQ,QAAA,GAAG,gBAAI,EAACJ,OAAO,CAACe,SAAS;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACV,EAAA,CAjCQD,cAAc;EAAA,QACNH,SAAS;AAAA;AAAAsB,EAAA,GADjBnB,cAAc;AAmCvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}