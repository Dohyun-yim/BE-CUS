{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\project\\\\BE-CUS\\\\src\\\\components\\\\cus\\\\Form.js\";\nimport React from \"react\";\nimport styles from \"./Form.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  title,\n  fields,\n  onSubmit,\n  submitDescription = \"제출하시면, 연락처 및 이메일로 일정 회신 드리겠습니다.\"\n}) {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    let isValid = true;\n\n    // 필수 필드 검사\n    fields.forEach(field => {\n      if (field.required && !formData.get(field.name)) {\n        isValid = false; // 필수 필드가 비어 있으면 유효하지 않음\n        alert(`${field.label}는 필수 입력 사항입니다.`);\n      }\n    });\n    if (isValid) {\n      onSubmit(formData); // 모든 필수 입력이 유효한 경우에만 onSubmit 호출\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.field,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.id,\n        className: styles.label,\n        children: [field.label, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.requiredStar,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), field.type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: styles.textarea,\n        id: field.id,\n        name: field.name,\n        required: field.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.input,\n        type: field.type,\n        id: field.id,\n        name: field.name,\n        required: field.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), submitDescription && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.submitDescription,\n      children: submitDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submitButton,\n      type: \"submit\",\n      children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Form","title","fields","onSubmit","submitDescription","handleSubmit","event","preventDefault","formData","FormData","target","isValid","forEach","field","required","get","name","alert","label","className","form","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","htmlFor","id","requiredStar","type","textarea","input","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/project/BE-CUS/src/components/cus/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nfunction Form({\r\n  title,\r\n  fields,\r\n  onSubmit,\r\n  submitDescription = \"제출하시면, 연락처 및 이메일로 일정 회신 드리겠습니다.\",\r\n}) {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.target);\r\n    let isValid = true;\r\n\r\n    // 필수 필드 검사\r\n    fields.forEach((field) => {\r\n      if (field.required && !formData.get(field.name)) {\r\n        isValid = false; // 필수 필드가 비어 있으면 유효하지 않음\r\n        alert(`${field.label}는 필수 입력 사항입니다.`);\r\n      }\r\n    });\r\n\r\n    if (isValid) {\r\n      onSubmit(formData); // 모든 필수 입력이 유효한 경우에만 onSubmit 호출\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {fields.map((field, index) => (\r\n        <div className={styles.field} key={index}>\r\n          <label htmlFor={field.id} className={styles.label}>\r\n            {field.label}\r\n            {field.required && <span className={styles.requiredStar}>*</span>}\r\n          </label>\r\n          {field.type === \"textarea\" ? (\r\n            <textarea\r\n              className={styles.textarea}\r\n              id={field.id}\r\n              name={field.name}\r\n              required={field.required}\r\n            ></textarea>\r\n          ) : (\r\n            <input\r\n              className={styles.input}\r\n              type={field.type}\r\n              id={field.id}\r\n              name={field.name}\r\n              required={field.required}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n      {submitDescription && (\r\n        <p className={styles.submitDescription}>{submitDescription}</p>\r\n      )}\r\n      <button className={styles.submitButton} type=\"submit\">\r\n        제출하기\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}