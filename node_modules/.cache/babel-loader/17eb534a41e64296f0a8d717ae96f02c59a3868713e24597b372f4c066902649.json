{"ast":null,"code":"var _jsxFileName = \"/Users/yimdohyun/Desktop/\\u1106\\u116E\\u11AB\\u1109\\u1165/\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/01_\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/\\u1100\\u116A\\u11AB\\u1105\\u1175\\u110C\\u1161 \\u1111\\u1166\\u110B\\u1175\\u110C\\u1175/manager/src/pages/man/ManCallDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport mockData from \"./mock_sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManScriptPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 id를 가져옵니다.\n\n  // 해당 id에 해당하는 전화 데이터를 찾습니다.\n  const callData = mockData.find(call => call.id === parseInt(id));\n  if (!callData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD574\\uB2F9 \\uC804\\uD654\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    name,\n    script\n  } = callData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [name, \" \\uD1B5\\uD654\\uC758 \\uC804\\uCCB4 \\uC2A4\\uD06C\\uB9BD\\uD2B8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: script\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ManScriptPage, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = ManScriptPage;\nexport default ManScriptPage;\nvar _c;\n$RefreshReg$(_c, \"ManScriptPage\");","map":{"version":3,"names":["React","useParams","mockData","jsxDEV","_jsxDEV","ManScriptPage","_s","id","callData","find","call","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","name","script","_c","$RefreshReg$"],"sources":["/Users/yimdohyun/Desktop/문서/대학교/01_졸업프로젝트/관리자 페이지/manager/src/pages/man/ManCallDetailsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport mockData from \"./mock_sample.json\";\n\nfunction ManScriptPage() {\n  const { id } = useParams(); // URL에서 id를 가져옵니다.\n\n  // 해당 id에 해당하는 전화 데이터를 찾습니다.\n  const callData = mockData.find((call) => call.id === parseInt(id));\n\n  if (!callData) {\n    return <div>해당 전화를 찾을 수 없습니다.</div>;\n  }\n\n  const { name, script } = callData;\n\n  return (\n    <div>\n      <h1>{name} 통화의 전체 스크립트</h1>\n      <p>{script}</p>\n    </div>\n  );\n}\n\nexport default ManScriptPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B;EACA,MAAMO,QAAQ,GAAGN,QAAQ,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKI,QAAQ,CAACJ,EAAE,CAAC,CAAC;EAElE,IAAI,CAACC,QAAQ,EAAE;IACb,oBAAOJ,OAAA;MAAAQ,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGV,QAAQ;EAEjC,oBACEJ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAKK,IAAI,EAAC,2DAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BZ,OAAA;MAAAQ,QAAA,EAAIM;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACV,EAAA,CAlBQD,aAAa;EAAA,QACLJ,SAAS;AAAA;AAAAkB,EAAA,GADjBd,aAAa;AAoBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}